digraph Q {

node [shape = box];
compound = true;

//insert
    a1 [label = "Insert(BTree, element)"]
    a1 -> a2
    a2 [label = "Existiert BTree" shape = diamond]
    a2-> b2 [label = "NO"]
    b2 [label = "neuen Baum mit element zurückgeben"]
    a2 -> a3 [label = "YES"]
    a3 [label = "element < BTree.element" shape = diamond]
    a3 -> smaller [label = "YES"]
    a3 -> a4 [label = "NO"]
    a4 [label = "element > BTree.element" shape = diamond]
    a4 -> larger [label = "YES"]
    a4 -> "Ende" [label = "NO (Element == BTree.Element)"]
    smaller [label = "Insert(BTree, left)"]
    //smaller -> a1
    larger [label = "InsertBTree(BTree, right)"]
    //larger -> a1

    smaller -> checkReturnl
    checkReturnl [label = "wurde angehängt?" shape = diamond]
    checkReturnl -> checkReturnl2 [label = "YES"]
    checkReturnl2 [label = "höhe rechts >= höhe links?" shape = diamond]
    checkReturnl2 -> ret  [label = YES]
    ret [label = "BTree.heigth++"]



    larger -> checkReturn
    checkReturn [label = "wurde angehängt?" shape = diamond]
    checkReturn -> checkReturn2 [label = "YES"]
    checkReturn2 [label = "höhe rechts >= höhe links?" shape = diamond]
    checkReturn2 -> "BTree.heigth++" [label = YES]

//a4 -> a3




}

